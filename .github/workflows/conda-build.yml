name: batteryhealthagi/algorithm-developemnt/transfer-learning	 

on:
  push:
  workflow_dispatch:

concurrency:
  group: "${{ github.ref }}"
  cancel-in-progress: true

env:
  VDOCS_DOCS_ORIGIN_PATH: site
  VDOCS_PROJECT_LANGUAGE: python
  EXCLUDE_PLATFORMS: windows mac

jobs:
  build_x86_64:
    runs-on:
      - self-hosted
      - docker
    container:
      image: continuumio/miniconda3:latest
    if: (always() && ${{ github.ref }} == "test-conda-build" && $EXCLUDE_PLATFORMS !~ /linux/)
    timeout-minutes: 300
    steps:
      - uses: actions/checkout@v4.1.0
        with:
          fetch-depth: 20
          lfs: true
      - run: ". /opt/conda/etc/profile.d/conda.sh"
      - run: conda activate base
      - run: conda config --set auto_update_conda False
      - run: conda config --add channels conda-forge
      - run: conda config --set channel_priority strict
      - run: conda config --set custom_channels.garage-conda-local https://artifactory.analog.com/artifactory
      - run: conda install conda-build setuptools-rust toml make 'garconda>=0.3.2' -c conda-forge -c garage-conda-local -y
      - run: make build-conda

  build_conda_mac_x86_64:
    runs-on:
      - self-hosted
      - macos
    if: (always() && ${{ github.ref }} == "test-conda-build" && $EXCLUDE_PLATFORMS !~ /mac/)
    timeout-minutes: 300
    steps:
      - uses: actions/checkout@v4.1.0
        with:
          fetch-depth: 20
          lfs: true
      - run: conda activate base
      - run: conda config --set auto_update_conda False
      - run: conda config --add channels conda-forge
      - run: conda config --set channel_priority strict
      - run: conda config --set custom_channels.garage-conda-local https://artifactory.analog.com/artifactory
      - run: conda install conda-build setuptools-rust toml make 'garconda>=0.3.2' -c conda-forge -c garage-conda-local -y
      - run: make build-conda
      - run: conda build purge-all
        if: always()

  build_conda_windows_x86_64:
    runs-on:
      - self-hosted
      - windows
    if: (always() && ${{ github.ref }} == "test-conda-build" && $EXCLUDE_PLATFORMS !~ /windows/)
    timeout-minutes: 300
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 20
          lfs: true
      - run: conda activate base
      - run: conda config --set auto_update_conda False
      - run: conda config --add channels conda-forge
      - run: conda config --set channel_priority strict
      - run: conda config --set custom_channels.garage-conda-local https://artifactory.analog.com/artifactory
      - run: conda install conda-build setuptools-rust toml make 'garconda>=0.3.2' -c conda-forge -c garage-conda-local -y
      - run: make build-conda
      - run: conda build purge-all
        if: always()

  docs:
    runs-on:
      - self-hosted
      - docker
    container:
      image: continuumio/miniconda3:latest
  #   if: # Unable to map conditional expression to GitHub Actions equivalent
		# # (${{ github.ref }} =~ /docs-test/)
    timeout-minutes: 60
    env:
      VDOCS_BUILD_COMMAND: "${{ secrets.VDOCS_BUILD_COMMAND }}"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 20
          lfs: true
      - run: conda config --set auto_update_conda False
      - run: conda config --add channels conda-forge
      - run: conda config --set channel_priority strict
      - run: conda config --set custom_channels.avan-conda-local https://artifactory.analog.com/artifactory
      - run: conda install make tox-conda 'garconda>=0.3.2' pre-commit -c conda-forge -c garage-conda-local -y
      - run: make create-ci-env
      - run: eval "$VDOCS_BUILD_COMMAND"
      - uses: actions/upload-artifact@v3
        if: success()
        with:
          name: "${{ github.job }}"
          retention-days: 1
          path: "$VDOCS_DOCS_ORIGIN_PATH"
          
  historical-docs:
    runs-on:
      - self-hosted
      - docker
	  container:
	    image: continuumio/miniconda3:latest
    # if: # Unable to map conditional expression to GitHub Actions equivalent
    # # ${{ github.ref }} =~ /^historical-docs.*$/
	  timeout-minutes: 60
    env:
	    VDOCS_BUILD_COMMAND: "${{ secrets.VDOCS_BUILD_COMMAND }}"
	    GIT_STRATEGY: "${{ secrets.GIT_STRATEGY }}"
	    GIT_FETCH_EXTRA_FLAGS: "${{ secrets.GIT_FETCH_EXTRA_FLAGS }}"
	  steps:
	    - uses: actions/checkout@v4.1.0
		  with:
		    fetch-depth: 20
		    lfs: true
	    - run: conda config --set auto_update_conda False
	    - run: conda config --add channels conda-forge
      - run: conda config --set channel_priority strict
	    - run: conda config --set custom_channels.garage-conda-local https://artifactory.analog.com/artifactory
	    - run: conda install make tox-conda garconda'>=0.3.2' pre-commit -c conda-forge -c garage-conda-local -y
	    - run: make create-ci-env
	    - run: test -z $VDOCS_DOCS_ORIGIN_PATH && test -z $VDOCS_BUILD_COMMAND
	    - run: |
		    ORIGIN_PARENT_PATH=$(dirname "$VDOCS_DOCS_ORIGIN_PATH")
		    for TAG in $(git tag); do
		      mkdir -p doc_builds/$TAG/$VDOCS_DOCS_ORIGIN_PATH
		      echo "Checking out tag" $TAG
		      git checkout -f $TAG
		      echo "Building for tag" $TAG
		      eval $VDOCS_BUILD_COMMAND
		      cp -r $VDOCS_DOCS_ORIGIN_PATH doc_builds/$TAG/$ORIGIN_PARENT_PATH
		      # Clean up residual docs
		      rm -r $VDOCS_DOCS_ORIGIN_PATH/*
		    done
	    - uses: actions/upload-artifact@v4.1.0
		    if: success()
		    with:
		      name: "${{ github.job }}"
		      path: doc_builds
  tests:
    needs:
	  - build_conda_linux_x86_64
	  - build_conda_mac_x86_64
	  - build_conda_windows_x86_64
	  - docs
	  - historical-docs
	  runs-on:
	    - self-hosted
	    - docker
	  container:
	    image: continuumio/miniconda3:latest
	  timeout-minutes: 60
	  steps:
	    - uses: actions/checkout@v4.1.0
	      with:
		      fetch-depth: 20
		      lfs: true
	    - uses: actions/download-artifact@v4.1.0
	    - run: conda config --set auto_update_conda False
	    - run: conda config --add channels conda-forge
	    - run: conda config --set channel_priority strict
	    - run: conda config --set custom_channels.garage-conda-local https://artifactory.analog.com/artifactory
	    - run: conda install make tox-conda garconda'>=0.3.2' pre-commit -c conda-forge -c garage-conda-local -y
	    - run: make create-ci-env
	    - run: make test-all
	    - run: make doc
  deploy_conda_linux_x86_64:
	  needs: tests
	  runs-on:
	    - self-hosted
	    - docker
	  container:
	    image: continuumio/miniconda3:latest
	  if: # Unable to map conditional expression to GitHub Actions equivalent
		# (always() && ${{ github.ref }} =~ /^v?(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$/ && $EXCLUDE_PLATFORMS !~ /linux/)
	  timeout-minutes: 300
	  steps:
	    - uses: actions/checkout@v4.1.0
		    with:
		      fetch-depth: 20
		      lfs: true
	    - uses: actions/download-artifact@v4.1.0
      - run: ". /opt/conda/etc/profile.d/conda.sh"
	    - run: conda activate base
	    - run: conda config --set auto_update_conda False
	    - run: conda config --add channels conda-forge
	    - run: conda config --set channel_priority strict
	    - run: conda config --set custom_channels.garage-conda-local https://artifactory.analog.com/artifactory
	    - run: conda install conda-build setuptools-rust toml make garconda'>=0.3.2' -c conda-forge -c garage-conda-local -y
	    - run: make build-conda
	    - run: make upload-conda-ci ARTIFACTORY_API_TOKEN=$ARTIFACTORY_API_TOKEN
		    if: always()
	    - run: make verify-upload-conda
		    if: always()
	    - run: conda build purge-all
		    if: always()

  deploy_conda_mac_x86_64:
	  needs: tests
	runs-on:
	  - self-hosted
	  - macos
	if: # Unable to map conditional expression to GitHub Actions equivalent
		# (always() && ${{ github.ref }} =~ /^v?(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$/ && $EXCLUDE_PLATFORMS !~ /mac/)
	timeout-minutes: 300
	steps:
	  - uses: actions/checkout@v4.1.0
	    with:
		  fetch-depth: 20
		  lfs: true
	  - uses: actions/download-artifact@v4.1.0
	  - run: conda activate base
	  - run: conda config --set auto_update_conda False
	  - run: conda config --add channels conda-forge
	  - run: conda config --set channel_priority strict
	  - run: conda config --set custom_channels.garage-conda-local https://artifactory.analog.com/artifactory
	  - run: conda install conda-build setuptools-rust toml make garconda'>=0.3.2' -c conda-forge -c garage-conda-local -y
	  - run: make build-conda
	  - run: make upload-conda-ci ARTIFACTORY_API_TOKEN=$ARTIFACTORY_API_TOKEN
		if: always()
	  - run: make verify-upload-conda
		if: always()
	  - run: conda build purge-all
		if: always()
	
  deploy_conda_windows_x86_64:
	  needs: tests
	  runs-on:
	    - self-hosted
	    - win
	  if: # Unable to map conditional expression to GitHub Actions equivalent
		  # (always() && ${{ github.ref }} =~ /^v?(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$/ && $EXCLUDE_PLATFORMS !~ /windows/)
	  timeout-minutes: 300
	  steps:
	    - uses: actions/checkout@v4.1.0
		    with:
		      fetch-depth: 20
		      lfs: true
	    - uses: actions/download-artifact@v4.1.0
	    - run: conda activate base
	    - run: conda config --set auto_update_conda False
	    - run: conda config --add channels conda-forge
	    - run: conda config --set channel_priority strict
	    - run: conda config --set custom_channels.garage-conda-local https://artifactory.analog.com/artifactory
	    - run: conda install conda-build setuptools-rust toml make garconda'>=0.3.2' -c conda-forge -c garage-conda-local -y
	    - run: make build-conda
	    - run: make upload-conda-ci ARTIFACTORY_API_TOKEN=$ARTIFACTORY_API_TOKEN
		    if: always()
	    - run: make verify-upload-conda
		    if: always()
	    - run: conda build purge-all
		    if: always()
		
  pages:
	  needs: tests
	  runs-on:
	    - self-hosted
	    - docker
	  container:
	    image: http://artifactory.analog.com:6570/versioned-docs:latest
	  if: # Unable to map conditional expression to GitHub Actions equivalent
		  # ${{ github.ref }} =~ /docs-test/ || ${{ github.ref }} =~ /^historical-docs.*$/
		timeout-minutes: 60
	  env:
	    GIT_STRATEGY: "${{ secrets.GIT_STRATEGY }}"
	    GIT_FETCH_EXTRA_FLAGS: "${{ secrets.GIT_FETCH_EXTRA_FLAGS }}"
	    AGSW_ACCOUNT_ID: "${{ secrets.AGSW_ACCOUNT_ID }}"
	    VERSIONED_DOCS_ARTIFACTS_BUCKET: "${{ secrets.VERSIONED_DOCS_ARTIFACTS_BUCKET }}"
	    VERSIONED_DOCS_CI_ROLE: "${{ secrets.VERSIONED_DOCS_CI_ROLE }}"
	    DOCUMENTATION_TYPE: "${{ secrets.DOCUMENTATION_TYPE }}"
	  steps:
	    - uses: actions/checkout@v4.1.0
	      with:
		      fetch-depth: 20
		      lfs: true
	    - uses: actions/download-artifact@v4.1.0
	    - run: gather-docs
	    - run: push-docs-version
	    - uses: actions/upload-artifact@v4.1.0
		    if: success()
		    with:
		      name: "${{ github.job }}"
		      retention-days: 1
		      path: public
	    - uses: JamesIves/github-pages-deploy-action@v4.5.0
	      with:
		      branch: gh-pages
		      folder: public
